// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewPandemic4.Models;

namespace NewPandemic4.Migrations
{
    [DbContext(typeof(InfestationContext))]
    [Migration("20200603052327_HumanCountWorldPartHW6")]
    partial class HumanCountWorldPartHW6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NewPandemic4.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeadCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<int>("RecoveredCount")
                        .HasColumnType("int");

                    b.Property<int>("SickCount")
                        .HasColumnType("int");

                    b.Property<bool>("Vaccine")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            DeadCount = 31309,
                            Name = "Brazil",
                            Population = 209500000,
                            RecoveredCount = 241000,
                            SickCount = 558000,
                            Vaccine = false
                        },
                        new
                        {
                            Id = 5,
                            DeadCount = 27127,
                            Name = "Spain",
                            Population = 46940000,
                            RecoveredCount = 150000,
                            SickCount = 240000,
                            Vaccine = false
                        },
                        new
                        {
                            Id = 6,
                            DeadCount = 206,
                            Name = "Morocco",
                            Population = 36300000,
                            RecoveredCount = 6410,
                            SickCount = 7866,
                            Vaccine = false
                        },
                        new
                        {
                            Id = 7,
                            DeadCount = 4634,
                            Name = "China",
                            Population = 193000000,
                            RecoveredCount = 78314,
                            SickCount = 83021,
                            Vaccine = false
                        },
                        new
                        {
                            Id = 8,
                            DeadCount = 102,
                            Name = "Australia",
                            Population = 24000000,
                            RecoveredCount = 7219,
                            SickCount = 7219,
                            Vaccine = false
                        });
                });

            modelBuilder.Entity("NewPandemic4.Models.Human", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSick")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Humans");
                });

            modelBuilder.Entity("NewPandemic4.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorIdId")
                        .HasColumnType("int");

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFake")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorIdId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("NewPandemic4.Models.WorldPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("WorldParts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "America North"
                        },
                        new
                        {
                            Id = 2,
                            Name = "America Sourth"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Europe"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Asia"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Africa"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Australia"
                        });
                });

            modelBuilder.Entity("NewPandemic4.Models.Human", b =>
                {
                    b.HasOne("NewPandemic4.Models.Country", "Country")
                        .WithMany("Humans")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NewPandemic4.Models.News", b =>
                {
                    b.HasOne("NewPandemic4.Models.Human", "AuthorId")
                        .WithMany()
                        .HasForeignKey("AuthorIdId");
                });

            modelBuilder.Entity("NewPandemic4.Models.WorldPart", b =>
                {
                    b.HasOne("NewPandemic4.Models.Country", "Country")
                        .WithMany("WorldParts")
                        .HasForeignKey("CountryId");
                });
#pragma warning restore 612, 618
        }
    }
}
